github.com/gustavoguanabara

gustavoguanabara.github.io

Bibliografia
Referência MDN (Mozilla Developer Network)

W3C (World Wide Web Consortium)

Web Hypertext Application Technology Working Group

W3Schools (Refsnes Data)

Livros
HTML 5 Entendendo e Executando (O'Reilly)

HTML5 e CSS3 (Alta Books)

HTML&CSS Projete e Construa Websites (Alta Books)

-----------------------------------------------

A linguagem HTML é focada em conteúdo (textos, imagens, vídeos, tabelas)

A linguagem CSS é focada em design (cores, sombras, tamanhos, posicionamento)

A linguagem Javascript é focada em interações (menus, animações, popups, validações)

HTML
Abertura de tag + conteúdo + fechamento de tag:
<h1>Exemplo de título</h1>

Parâmetros (src, alt) Valores (exemplo de foto)
<img src="foto.png" alt="Exemplo de foto">

CSS
h1{ //(h1 = seletor)
    font-family: Arial; //(font-family=declaração)
    font-size: 20pt; //(20pt=valor)
    color: blue; //(color=propriedade)
}

<!-- &lt; (less than) mostra no texto o símbolo (<) e &gt; (greater than) mostra o símbolo (>)-->

<!--Para emojis é necessário o comando &#x + código no emoji na emojipedia-->

Site de imagens de domínio público:
UnSplash
Pexels
FreePik
Rawpixel
Pixabay
Libreshot
Wikimedia Commons

TAGs de forma e semântica
Consultar com frequência as tags obsoletas no site oficial da W3C
Usar apenas tags de semântica na HTML5 como STRONG e EM
As tags de forma como B e I ficam para as CSS3 

Listas
Listas ordenadas: Tag <ol>, em cada elemento usar a tag <li>
A tag <ol> suporta 5 tipos: numeral (1), letras maiúsculas (A), letras minúsculas (a), algorismos romanos maiúsculos (I), algorismos romanos minúsculos (i)
O fechamento da tag <li> é opcional no HTML5
É possível criar listas dentro de listas

Listas não ordenadas: Tag <ul>, em cada elemento usar a tag <li>
A tag <ul> suporta 3 tipos: disk, circle, square

Para links abrirem em nova janela deve-se usar a propriedade = target='_blank'

-----------------------------------------------

****** Módulo 02 ******

border-radius: 10px = suaviza as bordas de um elemento
box-shadow: 1px 1px 1px black =
cria sombras no elemento, ordem dos valores: quantidade de pixels pra direita, quantidade de pixels pra baixo, espalhamento da sombra, cor da sombra

-- Cores --
Sempre trabalhar com paletas de 3 a 5 cores

Adobe Colors
Ferramenta gratuita para trabalhar com paleta de cores
Possui função de extração de cores de uma imagem e criação de degradê
(Não permite salvar paletas, apenas com cadastro)

Paletton 
Ferramenta gratuita para trabalhar com paleta de cores
Tem a função de mostrar exemplos de sites com a paleta escolhida

Coolors
"Explorar" de paleta de cores

Extensão: Collorzilla
Para capturar cores no navegador

Configuração global das CSS = *{}

-- Tipografia (Fontes) --

Para textos longos em sites utilizar fontes sans-serif

font-family: Arial, Helvetica, sans-serif;
O comando font-family tenta usar a primeira fonte que ele encontrar. Caso a primeira não esteja instalada no computador, ele procura a segunda e assim por diante.

font-size: 
Medidas absolutas: cm, mm, px, in (polegada), pt (ponto), pc
Medidas relativas: em (relativo ao tamanho atual da fonte), ex (relativo a altura x de uma fonte), rem (parecido com em mas relativo ao root - fonte do body), vw (largura da viewport), %
16 px = 1em = tamanho padrão dos navegadores

font-weight:  peso da fonte 
lighter, normal, bold, bolder, 100-900

Itálico: font-style: italic;

Sublinhado: text-decoration: underline;

Com comandos similares é possível unir tudo em um único comando - chamado shorthand - no caso do comando font a ordem é:
- font-style > font-weight > font-size > font-family
Ficando assim:
font: italic bolder 3em 'Work Sans', sans-serif;

Para usar fontes externas usasse o comando (dentro do style):
@font-face {
        font-family: 'Star Jedi'; //o nome da font-family é minha escolha
        src: url(./fontes/Starjedi.ttf) format(truetype)

Tipos de format()
- opentype (otf)
- truetype (ttf)
- embedded-opentype
- truetype-aat (Apple Advanced Typography)
- svg

Fontes Ninja: extensão do google chrome para detectar quais as fontes usadas em sites (não funciona com imagens)

Sites para detecção de fontes em imagens:
WhatFontIs
FontSquirrel
MyFonts

Alinhamento de texto em CSS
text-align: (left, center, right, justify)

Identar a primeira linha de cada parágrafo
text-indent: 

-- Seletores personalizados --
id em HTML = # em CSS
class em HTMl = . em CSS

id = ''  = define uma identidade especial para a tag

Duas tags diferentes podem possuir id iguais, se usado o comando #id no css ambas as tags receberão as mesmas configurações. Mas se usado o comando tag#id elas poderão receber configurações diferentes.
OBS.: Funciona, mas de acordo com o W3C está ERRADO!
Para isso deve-se usar o identificador 'class'
Mais de um elemento pode receber a mesma classificação 'class' e dividir configurações

#Dica: evitar dar nomes de class de acordo com a forma. Deve-se dar nomes de acordo com a função

#Dica: pode-se colocar ancoras no site que levem de volta a uma tag com 'id' específico
<a href="#principal">Clique para voltar ao início</a>
Usado, por exemplo, para voltar ao início da página

Um elemento pode receber mais de uma classe, assim como tbm pode receber um 'id' e uma 'class'. 'id' sobrepõe as configurações de 'class'

Pseudo-classe =
Trata do estado de um determinado elemento (ativo, marcado, vazio, habilitado, hover - quando passa o mouse em cima, etc)
pseudo classe é representada como : nas css

Div é uma tag "coringa" que representa um espaço na tela 

div > p { } /* Configuração apenas para parágrafos dentro de divs */
O símbolo '>' é usado para especificar apenas tags dentro de outras

> = children, elemento filho de outro elemento

Pseudo-elemento = trata do conteúdo do elemento
pseudo elemento é representada como :: nas css

-- Modelo de caixas --
Formatação das caixas:

height: 10px;
width: 10px;
border: 10px;
padding: 10px; espaço interno entre conteúdo e borda(acolchoamento)
margin: 10px; espaço externo entre borda e elementos de fora
outline: 10px; contorno fora do elemento, depois da border e antes do espaço do margin

Tipos de caixas:
Box-level e Inline-level
Consultar imagem (TiposDeCaixas.png)

Exemplos de caixas:
Consultar imagem (ExemplosDeCaixas.png)

User Agent = Navegador

Display: block; configuração que deixa o elemento como box-level
Display: inline; configuração que deixa o elemento como inline-level

#Dica: Usar o DevTools do google chrome para observar e testar os elementos de uma caixa

-- Grouping Tags --
Tags semânticas (vistos como div)
header
nav
main
section
article
aside (elemento pertencente a um artigo)
footer